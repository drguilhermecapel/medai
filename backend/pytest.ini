[tool:pytest]
minversion = 6.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
asyncio_mode = auto

# Marcadores de teste
markers =
    unit: Testes unitários
    integration: Testes de integração
    e2e: Testes end-to-end
    critical: Testes de componentes críticos
    slow: Testes lentos
    smoke: Testes de fumaça

# Configuração de cobertura
addopts = 
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=json
    --cov-fail-under=80
    --strict-markers
    -vv

# Exclusões de cobertura
[coverage:run]
source = app
omit = 
    */tests/*
    */migrations/*
    */conftest.py
    */__init__.py
    */config.py
    */alembic/*

[coverage:report]
precision = 2
show_missing = true
skip_empty = true
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod